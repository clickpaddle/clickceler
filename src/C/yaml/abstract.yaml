abstract_rules:
  - name: infrastructure_issue
    priority: 100
    events:
      - event: server(E)
        conditions:
          - eq(E, status, open)
          - eq(E, severity, critical)
          - eq(E, env, dev)

      - event: disk(E)
        conditions:
          - eq(E, status, open)
          - eq(E, severity, critical)
          - eq(E, env, dev)
          - ge(E, used_space, 100)

      - event: memory(E)
        conditions:
          - eq(E, status, open)
          - eq(E, severity, critical)
          - eq(E, env, dev)
          - le(E, free_memory, 0)

    actions:
      - set_field(E, status, open)
      - set_field(E, severity, major)
      - set_field(E, message, "<to_be_defined>")
      - set_field(E, category, infrastructure)
      - set_field(E, sub_category, "<to_be_defined>")
      - set_field(E, priority, p2)
      - set_field(E, impact, dev)
      - set_field(E, reported_by, clickceller)
      - set_field(E, hostname, E.hostname)

abstract_rules:
  - name: abstract_network
    type: incident
    priority: 90
    events:
      - event: firewall(E)
        conditions:
          - eq(E, status, open)
          - eq(E, severity, critical)
          - eq(E, env, prod)

      - event: snmptrap(E)
        conditions:
          - eq(E, status, open)
          - eq(E, severity, critical)
          - eq(E, env, prod)

      - event: ping(E)
        conditions:
          - eq(E, status, failed)
          - eq(E, severity, critical)
          - eq(E, env, prod)

    actions:
      - set_field(E, severity, critical)
      - set_field(E, message, "Network connectivity issue detected")
      - set_field(E, category, infrastructure)
      - set_field(E, sub_category, network)
      - set_field(E, priority, p1)
      - set_field(E, impact, prod)

